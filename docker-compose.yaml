name: "neighborhood_service"


services:
  triton-server:
    build: ./triton_inference
    command: ["tritonserver", "--model-repository=/models"]
    ports:
        - "8000:8000"
        - "8001:8001"
        - "8002:8002"
    networks:
      - project-net

  triton-orchestrator:
    build: ./model_orchestrator
    command: ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "7654"]      
    ports:
        - "7654:7654"
    networks:
      - project-net
    depends_on:
      - triton-server

  postgres:
      build: ./database
      environment:
        POSTGRES_DB: neighbor_service
        POSTGRES_USER: admin
        POSTGRES_PASSWORD: $4bCK%W(+^xA
      ports:
        - "5432:5432"
      command: >
        postgres
        -c shared_preload_libraries=pg_cron
        -c cron.database_name=neighbor_service
      volumes:
        - postgres_data:/var/lib/postgresql/data
      networks:
        - project-net

  redis:
    build: ./redis
    restart: always
    ports:
      - "6777:6777"
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=Zahodim!!
    networks:
      - project-net

  frontend:
    build: 
      context: ./frontend
    ports:
      - "8777:80"
    networks:
      - project-net
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf 

networks:
  project-net:

volumes:
  postgres_data:
  redis_data: